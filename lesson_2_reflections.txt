How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area has no direct affect on the end files. Files can be stored there which are ready to be comitted but dependent on other files to come.
How can you use the staging area to make sure you have one commit per logical change?
by checking git diff --staged between the staging area and repository. 
What are some situations when branches would be helpful in keeping your history organized? How would branches help?
They will be helpful when creating testing scenarios, or long new feature develpoments. This way they will not affect the master code until they are ready.
How do the diagrams help you visualize the branch structure?
It shows the connectiones between different commits.
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
getting the commits of both branches to be present in one single branch. Since they are now one.  
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
The pro is that you will constantly have to check that most up to date code in cases of conflict, and enure the correct code is going into production.
The con is that if you wrote the correct code it might not apply and you will have to re-exaimne the changes between the two branches.  